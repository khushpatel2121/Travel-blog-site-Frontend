{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","persistConfig","key","version","rootReducer","user","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/khushpatel/Desktop/commited/Sample Web/Client/src/redux/store.js"],"sourcesContent":["import { configureStore,combineReducers } from '@reduxjs/toolkit'\nimport userReducer from './userSlice'\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from \"redux-persist\";\n  import storage from \"redux-persist/lib/storage\";\n  import { PersistGate } from \"redux-persist/integration/react\";\n  \n  const persistConfig = {\n    key: \"root\",\n    version: 1,\n    storage,\n  };\n  const rootReducer = combineReducers({user:userReducer})\n\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n}\n)\n\nexport const persistor = persistStore(store);"],"mappings":"AAAA,SAASA,cAAc,EAACC,eAAe,QAAQ,kBAAkB;AACjE,OAAOC,WAAW,MAAM,aAAa;AACrC,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,iCAAiC;AAE7D,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVJ;AACF,CAAC;AACD,MAAMK,WAAW,GAAGf,eAAe,CAAC;EAACgB,IAAI,EAACf;AAAW,CAAC,CAAC;AAGvD,MAAMgB,gBAAgB,GAAGd,cAAc,CAACS,aAAa,EAAEG,WAAW,CAAC;AAGrE,OAAO,MAAMG,KAAK,GAAGnB,cAAc,CAAC;EAChCoB,OAAO,EAAEF,gBAAgB;EAC3BG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CACA;AAED,OAAO,MAAMe,SAAS,GAAGtB,YAAY,CAACgB,KAAK,CAAC"},"metadata":{},"sourceType":"module"}